<TreeView
	x:Class="Rylogic.Gui.WPF.TreeViewMS"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:local="clr-namespace:Rylogic.Gui.WPF"
	mc:Ignorable="d" 
	VirtualizingStackPanel.IsVirtualizing="True"
	VirtualizingStackPanel.VirtualizationMode="Recycling"
	d:DesignHeight="450"
	d:DesignWidth="800"
	>
	<TreeView.Resources>

		<!-- Colours -->
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF989898"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="Transparent"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF1BBBFA"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="Transparent"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF262626"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF595959"/>

		<!-- The shape of the expand button-->
		<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
		
		<!-- ?? -->
		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Expand/Collapse button -->
		<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Width" Value="16"/>
			<Setter Property="Height" Value="16"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">

						<!-- Graphics -->
						<Border
							Background="Transparent"
							Padding="5"
							Width="16"
							Height="16"
							>
							<Path
								Data="{StaticResource TreeArrow}"
								Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
								Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
								x:Name="ExpandPath"
								>
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
								</Path.RenderTransform>
							</Path>
						</Border>
						
						<!-- Triggers -->
						<ControlTemplate.Triggers>
							
							<!-- IsChecked -->
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
								<Setter Property="RenderTransform" TargetName="ExpandPath">
									<Setter.Value>
										<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
									</Setter.Value>
								</Setter>
							</Trigger>

							<!-- Hovered -->
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
							</Trigger>

							<!-- Both -->
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
							</MultiTrigger>
							
						</ControlTemplate.Triggers>

					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Tree Item style -->
		<Style x:Key="TreeViewMSItemStyle" TargetType="{x:Type TreeViewItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						
						<!-- Graphics -->
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="19" Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>

							<!-- Expand button -->
							<ToggleButton
								Grid.Row="0"
								Grid.Column="0"
								Style="{StaticResource ExpandCollapseToggleStyle}"
								IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
								ClickMode="Press" 
								x:Name="Expander" 
								/>

							<!-- Content -->
							<Border 
								Grid.Row="0"
								Grid.Column="1" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="true"
								x:Name="Bd" 
								>
								<ContentPresenter 
									x:Name="PART_Header" 
									ContentSource="Header" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
									/>
							</Border>

							<!-- ?? -->
							<ItemsPresenter 
								Grid.Row="1"
								Grid.Column="1" 
								Grid.ColumnSpan="2"
								x:Name="ItemsHost"
								/>
						</Grid>
						
						<!-- Triggers -->
						<ControlTemplate.Triggers>

							<!-- IsEnabled -->
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>

							<!-- Expanded -->
							<Trigger Property="IsExpanded" Value="false">
								<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
							</Trigger>
							
							<Trigger Property="HasItems" Value="false">
								<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
							</Trigger>

							<!-- IsSelected -->
							<Trigger Property="local:TreeViewMS.IsItemSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>

							<!-- IsSelected -->
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="local:TreeViewMS.IsItemSelected" Value="true"/>
									<Condition Property="IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
							</MultiTrigger>

						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			
			<Style.Triggers>
				<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel/>
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

	</TreeView.Resources>
	<TreeView.ItemContainerStyle>
		<StaticResource ResourceKey="TreeViewMSItemStyle"/>
	</TreeView.ItemContainerStyle>
</TreeView>
	
