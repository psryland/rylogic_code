<Grid
	x:Class="Rylogic.Gui.WPF.ChartControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:gui2="clr-namespace:Rylogic.Gui.WPF"
	xmlns:conv="clr-namespace:Rylogic.Gui.WPF.Converters"
	xmlns:local="clr-namespace:Rylogic.Gui.WPF.ChartDetail"
	mc:Ignorable="d" 
	d:DesignWidth="800"
	d:DesignHeight="450"
	UseLayoutRounding="True"
	Background="#EEE"
	x:Name="m_root"
	>
	<Grid.Resources>
		<ResourceDictionary>
			<TransformGroup x:Key="YAxisTransform">
				<RotateTransform Angle="-90"/>
			</TransformGroup>
			<ContextMenu
				x:Key="ChartCMenu"
				DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
				>
				<MenuItem Header="Objects">
					<MenuItem Header="Origin" IsChecked="{Binding Scene.Window.OriginPointVisible}" Command="{Binding ToggleOriginPoint}"/>
					<MenuItem Header="Focus" IsChecked="{Binding Scene.Window.FocusPointVisible}" Command="{Binding ToggleFocusPoint}"/>
					<MenuItem Header="Grid Lines" IsChecked="{Binding Options.ShowGridLines}" Command="{Binding ToggleGridLines}"/>
					<MenuItem Header="Axes" IsChecked="{Binding Options.ShowAxes}" Command="{Binding ToggleAxes}"/>
				</MenuItem>
				<MenuItem Header="Tools">
					<MenuItem Header="Show Value" IsChecked="{Binding ShowValueAtPointer}" Command="{Binding ToggleShowValue}"/>
					<MenuItem Header="Show Cross Hair" IsChecked="{Binding ShowCrossHair}" Command="{Binding ToggleShowCrossHair}"/>
				</MenuItem>
				<MenuItem Header="Navigation">
					<MenuItem Header="Mode">
						<ComboBox
								ItemsSource="{Binding Options.NavigationMode, Converter={conv:EnumValues}, Mode=OneTime}"
								SelectedItem="{Binding Options.NavigationMode}"
								Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"
								Background="{x:Static SystemColors.ControlBrush}"
								BorderThickness="0"
								Margin="1,1,20,1"
								/>
					</MenuItem>
					<MenuItem Header="Auto Range" Command="{Binding DoAutoRange}"/>
					<MenuItem Header="Aspect 1:1" Command="{Binding DoAspect11}"/>
					<MenuItem Header="Lock Aspect" IsChecked="{Binding LockAspect}" Command="{Binding ToggleLockAspect}"/>
					<MenuItem Header="Mouse Centred Zoom" IsCheckable="{Binding Options.MouseCentredZoom}" Command="{Binding ToggleMouseCentredZoom}"/>
				</MenuItem>
				<MenuItem Header="Rendering">
					<MenuItem
							Header="Background Colour"
							Background="{Binding Options.BackgroundColour, Converter={conv:ColourToBrush}}"
							Foreground="{Binding Options.BackgroundColour, Converter={conv:TextOverColourBrush}}"
							Command="{Binding SetBackgroundColour}"
							/>
					<MenuItem Header="Orthographic" IsChecked="{Binding Options.Orthographic}" Command="{Binding ToggleOrthographic}"/>
					<MenuItem Header="Antialiasing" IsChecked="{Binding Options.AntiAliasing}" Command="{Binding ToggleAntiAliasing}"/>
					<MenuItem Header="Fill Mode">
						<ComboBox
								ItemsSource="{Binding Options.FillMode, Converter={conv:EnumValues}, Mode=OneTime}"
								SelectedItem="{Binding Options.FillMode}"
								Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"
								Background="{x:Static SystemColors.ControlBrush}"
								BorderThickness="0"
								Padding="1,1,20,1"
								/>
					</MenuItem>
					<MenuItem Header="Cull Mode">
						<ComboBox
								ItemsSource="{Binding Options.CullMode, Converter={conv:EnumValues}, Mode=OneTime}"
								SelectedItem="{Binding Options.CullMode}"
								Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"
								Background="{x:Static SystemColors.ControlBrush}"
								BorderThickness="0"
								Padding="1,1,20,1"
								/>
					</MenuItem>
				</MenuItem>
			</ContextMenu>
			<ContextMenu
				x:Key="AxisCMenu"
				DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}"
				>
				<MenuItem Header="Allow Scroll" IsChecked="{Binding Axis.AllowScroll, Mode=OneWay}" Command="{Binding ToggleScrollLock}"/>
				<MenuItem Header="Allow Zoom" IsChecked="{Binding Axis.AllowZoom, Mode=OneWay}" Command="{Binding ToggleZoomLock}"/>
			</ContextMenu>
		</ResourceDictionary>
	</Grid.Resources>
	<Grid.RowDefinitions>
		<RowDefinition Height="Auto"/> <!-- Title -->
		<RowDefinition Height="Auto"/> <!-- XAxis Label (Dock=Top) -->
		<RowDefinition Height="Auto"/> <!-- XAxis Panel (Dock=Top) -->
		<RowDefinition Height="*"/>    <!-- Chart area-->
		<RowDefinition Height="Auto"/> <!-- XAxis Panel (Dock=Bottom) -->
		<RowDefinition Height="Auto"/> <!-- XAxis Label (Dock=Bottom) -->
	</Grid.RowDefinitions>
	<Grid.ColumnDefinitions>
		<ColumnDefinition Width="Auto"/> <!-- YAxis Label (Dock=Left) -->
		<ColumnDefinition Width="Auto"/> <!-- YAxis Panel (Dock=Left) -->
		<ColumnDefinition Width="*"/>    <!-- Chart area-->
		<ColumnDefinition Width="Auto"/> <!-- YAxis Panel (Dock=Right) -->
		<ColumnDefinition Width="Auto"/> <!-- YAxis Label (Dock=Right) -->
	</Grid.ColumnDefinitions>

	<!-- Title -->
	<Label
		x:Name="m_title_label"
		Grid.Row="0"
		Grid.Column="2"
		Content="{Binding Title}"
		Visibility="{Binding Title, Converter={conv:NullToCollapsed}}"
		HorizontalAlignment="Center"
		FontWeight="Bold"
		/>
	
	<!-- X Axis -->
	<TextBlock
		x:Name="m_xaxis_label"
		Grid.Row="5"
		Grid.Column="2"
		Text="{Binding XAxis.Label}"
		Visibility="{Binding XAxisLabelVisibility}"
		HorizontalAlignment="Center"
		/>
	<local:AxisPanel
		x:Name="m_xaxis_panel"
		Grid.Row="4"
		Grid.Column="2"
		Axis="{Binding XAxis}"
		Height="{Binding AxisSize, RelativeSource={RelativeSource Self}}"
		Visibility="{Binding Options.ShowAxes, Converter={conv:BoolToVisible}}"
		Background="{Binding Background}"
		ContextMenu="{StaticResource AxisCMenu}"
		/>

	<!-- Y Axis -->
	<TextBlock
		x:Name="m_yaxis_label"
		Grid.Row="3"
		Grid.Column="0"
		Text="{Binding YAxis.Label}"
		Visibility="{Binding YAxisLabelVisibility}"
		VerticalAlignment="Center"
		RenderTransformOrigin="0.0,0.0"
		LayoutTransform="{StaticResource YAxisTransform}"
		/>
	<local:AxisPanel
		x:Name="m_yaxis_panel"
		Grid.Row="3"
		Grid.Column="1"
		Axis="{Binding YAxis}"
		Width="{Binding AxisSize, RelativeSource={RelativeSource Self}}"
		Visibility="{Binding Options.ShowAxes, Converter={conv:BoolToVisible}}"
		Background="{Binding Background}"
		ContextMenu="{StaticResource AxisCMenu}"
		/>

	<!-- Chart area -->
	<local:ChartPanel
		Grid.Row="3"
		Grid.Column="2"
		UseLayoutRounding="True"
		ContextMenu="{StaticResource ChartCMenu}"
		Stretch="Fill"
		x:Name="m_chart_panel"
		/>
	<Canvas
		Grid.Row="3"
		Grid.Column="2"
		UseLayoutRounding="True"
		ClipToBounds="True"
		>
		<Canvas
			x:Name="m_chart_overlay"
			/>
	</Canvas>
	
	<!-- Show Value pop up -->
	<Popup
		Name="m_popup_show_value"
		HorizontalAlignment="Left"
		VerticalAlignment="Center"
		Placement="Relative"
		PlacementTarget="{Binding ElementName=m_chart_panel}"
		MinWidth="80"
		>
		<Border
			BorderThickness="1"
			BorderBrush="Black"
			>
			<TextBlock
				Background="LightYellow"
				Padding="5"
				Text="{Binding ValueAtPointer}"
				/>
		</Border>
	</Popup>

</Grid>
