<Window
	x:Class="Rylogic.Gui.WPF.View3dObjectManagerUI"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:gfx="clr-namespace:Rylogic.Gfx"
	xmlns:gui="clr-namespace:Rylogic.Gui.WPF;assembly=Rylogic.Gui.WPF"
	xmlns:conv="clr-namespace:Rylogic.Gui.WPF.Converters;assembly=Rylogic.Gui.WPF"
	xmlns:local="clr-namespace:Rylogic.Gui.WPF"
	mc:Ignorable="d" 
	d:DesignHeight="450"
	d:DesignWidth="800"
	Title="Scene Manager"
	WindowStartupLocation="CenterOwner"
	ResizeMode="CanResizeWithGrip"
	Width="500"
	Height="400"
	>
	<Window.Resources>
		<ResourceDictionary>
			<BitmapImage x:Key="plus" UriSource="/Rylogic.Gui.WPF;component/res/plus1.png"/>
			<BitmapImage x:Key="minus" UriSource="/Rylogic.Gui.WPF;component/res/minus1.png"/>
			<BitmapImage x:Key="refresh" UriSource="/Rylogic.Gui.WPF;component/res/refresh.png"/>
			<BitmapImage x:Key="eye_visible" UriSource="/Rylogic.Gui.WPF;component/res/eye_visible.png"/>
			<BitmapImage x:Key="eye_hidden" UriSource="/Rylogic.Gui.WPF;component/res/eye_hidden.png"/>

			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#000000"/>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#E0E0E0"/>

			<!-- Checker brush -->
			<DrawingBrush x:Key="CheckerBrush" AlignmentX="Left" AlignmentY="Top" TileMode="Tile" Viewport="0,0,0.25,0.25" Stretch="None">
				<DrawingBrush.Drawing>
					<DrawingGroup>
						<GeometryDrawing Brush="White">
							<GeometryDrawing.Geometry>
								<GeometryGroup>
									<RectangleGeometry Rect="0,0,100,100" />
									<RectangleGeometry Rect="100,100,100,100" />
								</GeometryGroup>
							</GeometryDrawing.Geometry>
						</GeometryDrawing>
						<GeometryDrawing Brush="Gray">
							<GeometryDrawing.Geometry>
								<GeometryGroup>
									<RectangleGeometry Rect="100,0,100,100" />
									<RectangleGeometry Rect="0,100,100,100" />
								</GeometryGroup>
							</GeometryDrawing.Geometry>
						</GeometryDrawing>
					</DrawingGroup>
				</DrawingBrush.Drawing>
			</DrawingBrush>

			<!-- Button style for state buttons -->
			<Style x:Key="StateButtonStyle" TargetType="{x:Type ToggleButton}">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Background="Transparent"
								BorderThickness="0"
								SnapsToDevicePixels="True"
								x:Name="border"
								>
								<ContentPresenter x:Name="contentPresenter"/>
							</Border>
							<!--<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="border" Value="Red"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Background" Value="Red"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="true"/>
										<Condition Property="IsChecked" Value="true"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" Value="Green"/>
								</MultiTrigger>
							</ControlTemplate.Triggers>-->
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!-- Context menu for the data grid part of the object manager -->
			<ContextMenu x:Key="ObjectManagerListCMenu"
				DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
				>
				<MenuItem
					Header="Visibility"
					>
					<MenuItem
						Header="Show All"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ShowAll}"
						/>
					<MenuItem
						Header="Hide All"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.HideAll}"
						/>
					<Separator/>
					<MenuItem
						Header="Show Others"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ShowOthers}"
						/>
					<MenuItem
						Header="Hide Others"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.HideOthers}"
						/>
					<MenuItem
						Header="Toggle Others"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ToggleOthers}"
						/>
					<Separator/>
					<MenuItem
						Header="Show Selected"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ShowSelected}"
						/>
					<MenuItem
						Header="Hide Selected"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.HideSelected}"
						/>
					<MenuItem
						Header="Toggle Selected"
						Command="{Binding SetVisible}"
						CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ToggleSelected}"
						/>
				</MenuItem>
				<MenuItem
					Header="State"
					IsEnabled="{Binding FirstSelected, Converter={conv:NotNull}}"
					>
					<MenuItem
						Header="Show Normals"
						IsChecked="{Binding FirstSelected.ShowNormals, FallbackValue=False}"
						Command="{Binding ToggleShowNormals}"
						/>
				</MenuItem>
			</ContextMenu>

		</ResourceDictionary>
	</Window.Resources>
	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<!-- Filter bar -->
		<Grid
			Grid.Row="0"
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.Resources>
				<Style x:Key="ExpandButtonStyle" TargetType="{x:Type Button}">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="MaxHeight" Value="22"/>
					<Setter Property="Margin" Value="2"/>
				</Style>
			</Grid.Resources>

			<!-- Expand All button -->
			<Button
				Grid.Column="1"
				Command="{Binding ExpandAll, ElementName=m_tree}"
				Style="{StaticResource ExpandButtonStyle}"
				>
				<Image
					Source="{StaticResource plus}"
					RenderOptions.BitmapScalingMode="HighQuality"
					/>
			</Button>

			<!-- Collapse All button -->
			<Button
				Grid.Column="2"
				Command="{Binding CollapseAll, ElementName=m_tree}"
				Style="{StaticResource ExpandButtonStyle}"
				>
				<Image
					Source="{StaticResource minus}"
					RenderOptions.BitmapScalingMode="HighQuality"
					/>
			</Button>

			<!-- Filter Pattern -->
			<gui:PatternFilter
				Grid.Column="3"
				Command="{Binding ApplyFilter}"
				Height="24"
				Margin="1"
				/>

		</Grid>
		
		<!-- Scene Graph -->
		<gui:TreeViewMS
			Grid.Row="1"
			ItemsSource="{Binding ObjectsView}"
			ContextMenu="{StaticResource ObjectManagerListCMenu}"
			gui:Control_.EventToCommand="SelectionChanged:UpdateSelected"
			BorderThickness="0"
			Margin="2"
			x:Name="m_tree"
			>
			<!-- Key Bindings -->
			<gui:TreeViewMS.InputBindings>
				<KeyBinding Key="Space"
					Command="{Binding SetVisible}"
					CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ToggleSelected}"
					/>
				<KeyBinding Key="Space" Modifiers="Ctrl"
					Command="{Binding SetVisible}"
					CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ShowSelected}"
					/>
				<KeyBinding Key="Space" Modifiers="Ctrl+Shift"
					Command="{Binding SetVisible}"
					CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.HideSelected}"
					/>
				<KeyBinding Key="W"
					Command="{Binding SetWireframe}"
					CommandParameter="0"/>
				<KeyBinding Key="W" Modifiers="Ctrl"
					Command="{Binding SetWireframe}"
					CommandParameter="+1"/>
				<KeyBinding Key="W" Modifiers="Ctrl+Shift"
					Command="{Binding SetWireframe}"
					CommandParameter="-1"
					/>
			</gui:TreeViewMS.InputBindings>

			<!-- Item Container Style -->
			<gui:TreeViewMS.ItemContainerStyle>
				<Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewMSItemStyle}">
					<!--<Setter Property="Background" Value="AliceBlue"/>-->
					<Style.Triggers>
						<Trigger Property="gui:TreeViewMS.IsItemSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<!--<Trigger Property="HasItems" Value="True">
							<Setter Property="Background" Value="Red"/>
						</Trigger>-->
					</Style.Triggers>
				</Style>
			</gui:TreeViewMS.ItemContainerStyle>

			<!-- Item Template -->
			<gui:TreeViewMS.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}">
					<Grid
						HorizontalAlignment="Stretch"
						>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<!-- Row controls -->
						<TextBlock
							Grid.Column="0"
							Text="{Binding Name}"
							VerticalAlignment="Center"
							Margin="3,1,3,1"
							/>
						<TextBlock
							Grid.Column="1"
							/>
						<ToggleButton
							Grid.Column="2"
							Style="{StaticResource StateButtonStyle}"
							IsChecked="{Binding Visible}"
							HorizontalAlignment="Right"
							VerticalAlignment="Center"
							Background="Transparent"
							BorderThickness="0"
							Margin="3,1,3,1"
							>
							<Image
								Source="{Binding Flags, Converter={conv:EnumSelect}, ConverterParameter='Hidden:eye_hidden|eye_visible'}"
								RenderOptions.BitmapScalingMode="Fant"
								Height="14"
								/>
						</ToggleButton>
						<TextBlock
							Grid.Column="3"
							Text="{Binding Type}"
							VerticalAlignment="Center"
							MinWidth="80"
							Margin="3,1,3,1"
							/>
						<TextBlock
							Grid.Column="4"
							Text="{Binding Colour}"
							VerticalAlignment="Center"
							Background="{Binding Colour, Converter={conv:ColourToBrush}}"
							Foreground="{Binding Colour, Converter={conv:TextOverColourBrush}}"
							MinWidth="60"
							Margin="3,1,3,1"
							/>
					</Grid>
				</HierarchicalDataTemplate>
			</gui:TreeViewMS.ItemTemplate>
		</gui:TreeViewMS>
		
		<!-- Tree and Grid -->
		<Grid
			Grid.Row="1"
			Visibility="Collapsed"
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.3*"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

			<!-- Object Hierarchy -->
			<TreeView
				Grid.Column="0"
				ItemsSource="{Binding ObjectsView}"
				>
				<TreeView.ItemTemplate>
					<HierarchicalDataTemplate DataType="{x:Type gfx:View3d+Object}" ItemsSource="{Binding Children}">
						<StackPanel>
							<TextBlock Text="{Binding Name}"/>
						</StackPanel>
					</HierarchicalDataTemplate>
				</TreeView.ItemTemplate>
			</TreeView>
			
			<!-- Splitter -->
			<GridSplitter
				Grid.Column="1"
				Width="4"
				HorizontalAlignment="Center"
				VerticalAlignment="Stretch"
				ShowsPreview="False"
				Background="{x:Static SystemColors.ControlBrush}"
				/>

			<!-- Object Properties -->
			<DataGrid
				Grid.Column="2"
				AutoGenerateColumns="False"
				GridLinesVisibility="None"
				HeadersVisibility="Column"
				ItemsSource="{Binding ObjectsView}"
				ContextMenu="{StaticResource ObjectManagerListCMenu}"
				gui:Control_.EventToCommand="SelectionChanged:UpdateSelected"
				IsReadOnly="True"
				>
				<DataGrid.InputBindings>
					<KeyBinding Key="Space" Command="{Binding SetVisible}" CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ToggleSelected}"/>
					<KeyBinding Key="Space" Modifiers="Ctrl" Command="{Binding SetVisible}" CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.ShowSelected}"/>
					<KeyBinding Key="Space" Modifiers="Ctrl+Shift" Command="{Binding SetVisible}" CommandParameter="{x:Static local:View3dObjectManagerUI+ESetVisibleCmd.HideSelected}"/>
					<KeyBinding Key="W" Command="{Binding SetWireframe}" CommandParameter="0"/>
					<KeyBinding Key="W" Modifiers="Ctrl" Command="{Binding SetWireframe}" CommandParameter="+1"/>
					<KeyBinding Key="W" Modifiers="Ctrl+Shift" Command="{Binding SetWireframe}" CommandParameter="-1"/>
				</DataGrid.InputBindings>
				<DataGrid.Resources>
					<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#000000"/>
					<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#E0E0E0"/>
					<DrawingBrush x:Key="CheckerBrush" AlignmentX="Left" AlignmentY="Top" TileMode="Tile" Viewport="0,0,0.25,0.25" Stretch="None">
						<DrawingBrush.Drawing>
							<DrawingGroup>
								<GeometryDrawing Brush="White">
									<GeometryDrawing.Geometry>
										<GeometryGroup>
											<RectangleGeometry Rect="0,0,100,100" />
											<RectangleGeometry Rect="100,100,100,100" />
										</GeometryGroup>
									</GeometryDrawing.Geometry>
								</GeometryDrawing>
								<GeometryDrawing Brush="Gray">
									<GeometryDrawing.Geometry>
										<GeometryGroup>
											<RectangleGeometry Rect="100,0,100,100" />
											<RectangleGeometry Rect="0,100,100,100" />
										</GeometryGroup>
									</GeometryDrawing.Geometry>
								</GeometryDrawing>
							</DrawingGroup>
						</DrawingBrush.Drawing>
					</DrawingBrush>
					
					<Style x:Key="ColourCellStyle" TargetType="{x:Type DataGridCell}">
						<Setter Property="Background" Value="{StaticResource CheckerBrush}"/>
					</Style>
				</DataGrid.Resources>
				<DataGrid.Columns>
					<DataGridTextColumn
						Header="Name"
						Binding="{Binding Name}"
						Width="2*"
						/>
					<DataGridTextColumn
						Header="Type"
						Binding="{Binding Type}"
						MinWidth="56"
						Width="1*"
						/>
					<DataGridTextColumn
						Header="Colour"
						Binding="{Binding Colour}"
						MinWidth="56"
						Width="0.6*"
						>
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Background" Value="{Binding Colour, Converter={conv:ColourToBrush}}"/>
								<Setter Property="Foreground" Value="{Binding Colour, Converter={conv:TextOverColourBrush}}"/>
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn
						Header="Flags"
						Binding="{Binding Flags}"
						MinWidth="56"
						MaxWidth="80"
						/>
				</DataGrid.Columns>
			</DataGrid>
		</Grid>
		
		<!-- Status -->
		<StatusBar
			Grid.Row="2"
			>
			<TextBlock Text="Idle"/>
		</StatusBar>

	</Grid>
</Window>
