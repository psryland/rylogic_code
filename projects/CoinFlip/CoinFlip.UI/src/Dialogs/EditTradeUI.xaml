<Window
	x:Class="CoinFlip.UI.EditTradeUI"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:conv="clr-namespace:Rylogic.Gui.WPF.Converters;assembly=Rylogic.Gui.WPF"
    mc:Ignorable="d" 
	d:DesignWidth="350"
	d:DesignHeight="400"
	Title="Modify Trade"
	WindowStartupLocation="Manual"
	ResizeMode="CanResizeWithGrip"
	ShowInTaskbar="True"
	Height="440"
	Width="380"
	MinWidth="380"
	MinHeight="440"
	Background="{Binding TradeTypeBgColour, Converter={conv:ColourToBrush}}"
	>
	<Window.Resources>
		<ResourceDictionary>
			<BitmapImage x:Key="dollar_sign" UriSource="/CoinFlip.UI;component/res/dollar_sign.png" />
			<BitmapImage x:Key="check_accept" UriSource="/CoinFlip.UI;component/res/check_accept.png" />
			<BitmapImage x:Key="check_reject" UriSource="/CoinFlip.UI;component/res/check_reject.png" />
		</ResourceDictionary>
	</Window.Resources>
	
	<Grid
		Margin="8"
		>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<!-- Icon and selectors -->
		<Grid
			Grid.Row="0"
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

			<!-- Icon -->
			<Image
				Grid.Row="0"
				Grid.Column="0"
				Source="{StaticResource dollar_sign}"
				RenderOptions.BitmapScalingMode="HighQuality"
				MaxWidth="48"
				Margin="8"
				/>

			<!-- Exchange Selector -->
			<Grid
				Grid.Row="0"
				Grid.Column="1"
				>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="2*"/>
				</Grid.ColumnDefinitions>
				<TextBlock
					Grid.Column="0"
					Text="Exchange:"
					HorizontalAlignment="Right"
					VerticalAlignment="Center"
					Margin="4"
					/>
				<ComboBox
					Grid.Column="1"
					ItemsSource="{Binding ExchangesOfferingPair}"
					SelectedItem="{Binding ExchangesOfferingPair/}"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					MinWidth="100"
					Margin="4"
					/>
			</Grid>
		</Grid>
		
		<!-- Trade price/amount-->
		<Grid
			Grid.Row="1"
			>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<!-- Fund Selector -->
			<StackPanel
				Grid.Row="0"
				Grid.Column="0"
				>
				<TextBlock
					Text="Fund:"
					Margin="3"
					/>
				<ComboBox
					ItemsSource="{Binding Funds}"
					SelectedItem="{Binding Funds/}"
					HorizontalContentAlignment="Center"
					DisplayMemberPath="Id"
					Margin="20,1,3,1"
					/>
			</StackPanel>
			
			<!-- Trade type -->
			<StackPanel
				Grid.Row="0"
				Grid.Column="1"
				IsEnabled="{Binding IsNewTrade}"
				>
				<TextBlock
					Text="Trade Type:"
					Margin="3"
					/>
				<ComboBox
					ItemsSource="{Binding TradeType, Converter={conv:EnumValues}, Mode=OneTime}"
					ItemTemplate="{conv:EnumValues+ToDesc}"
					SelectedItem="{Binding TradeType}"
					HorizontalContentAlignment="Center"
					Margin="20,1,3,1"
					/>
			</StackPanel>

			<!-- Order Price -->
			<StackPanel
				Grid.Row="1"
				Grid.Column="0"
				>
				<TextBlock
					Text="{Binding Trade.Pair.RateUnits, StringFormat=Order Price ({0}):}"
					Margin="3"
					/>
				<TextBox
					ToolTip="The price at which to make the trade"
					x:Name="m_tb_price"
					HorizontalContentAlignment="Right"
					Text="{Binding PriceQ2B}"
					IsEnabled="{Binding CanChoosePrice}"
					Margin="20,1,3,1"
					Padding="3"
					>
					<TextBox.Style>
						<Style TargetType="{x:Type TextBox}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsPriceValid}" Value="True">
									<Setter Property="Foreground" Value="Black"/>
									<Setter Property="BorderBrush" Value="#AAA"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding IsPriceValid}" Value="False">
									<Setter Property="Foreground" Value="#A00"/>
									<Setter Property="Background" Value="#FDD"/>
									<Setter Property="BorderBrush" Value="#F22"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Style>
				</TextBox>
			</StackPanel>

			<!-- Order Type -->
			<StackPanel
				Grid.Row="1"
				Grid.Column="1"
				>
				<TextBlock
					Text="Order Type:"
					Margin="3"
					/>
				<ComboBox
					ItemsSource="{Binding OrderType, Converter={conv:EnumValues}}"
					SelectedItem="{Binding OrderType}"
					HorizontalContentAlignment="Center"
					Margin="20,1,3,1"
					Padding="3"
					/>
			</StackPanel>

			<!-- Amount to Sell -->
			<StackPanel
				Grid.Row="2"
				Grid.Column="0"
				>
				<TextBlock
					Text="{Binding CoinIn.Symbol, StringFormat=Amount to Sell ({0}):}"
					Margin="3"
					/>
				<TextBox
					x:Name="m_tb_amount_in"
					HorizontalContentAlignment="Right"
					Text="{Binding AmountIn}"
					Margin="20,1,3,1"
					Padding="3"
					>
					<TextBox.Style>
						<Style TargetType="{x:Type TextBox}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsAmountInValid}" Value="True">
									<Setter Property="Foreground" Value="Black"/>
									<Setter Property="BorderBrush" Value="Black"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding IsAmountInValid}" Value="False">
									<Setter Property="Foreground" Value="#A00"/>
									<Setter Property="BorderBrush" Value="#F22"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Style>
				</TextBox>
				
				<!-- Use All button -->
				<StackPanel
					Orientation="Horizontal"
					Margin="20,0,3,3"
					HorizontalAlignment="Right"
					>
					<TextBlock
						Text="{Binding AvailableIn, Converter={conv:StringFormat}, ConverterParameter='8, true'}"
						Foreground="Gray"
						Margin="2"
						/>
					<Button
						ToolTip="{Binding CoinIn, StringFormat=Use the entire available balance of {0}}"
						Command="{Binding SetSellAmountToMaximum}"
						Background="LightBlue"
						BorderThickness="0"
						Width="14"
						Height="14"
						>
						<Button.Clip>
							<EllipseGeometry RadiusX="7" RadiusY="7" Center="7,7"/>
						</Button.Clip>
						<TextBlock
							Text="â–²"
							VerticalAlignment="Center"
							HorizontalAlignment="Center"
							Foreground="#555"
							FontSize="9"
							Margin="0,-3,0,0"
							/>
					</Button>
				</StackPanel>
			</StackPanel>

			<!-- Amount to Buy -->
			<StackPanel
				Grid.Row="2"
				Grid.Column="1"
				>
				<TextBlock
					Text="{Binding CoinOut.Symbol, StringFormat=Amount to Buy ({0}):}"
					Margin="3"
					/>
				<TextBox
					x:Name="m_tb_amount_out"
					HorizontalContentAlignment="Right"
					Text="{Binding AmountOut}"
					Margin="20,1,3,1"
					Padding="3"
					>
					<TextBox.Style>
						<Style TargetType="{x:Type TextBox}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsAmountOutValid}" Value="True">
									<Setter Property="Foreground" Value="Black"/>
									<Setter Property="BorderBrush" Value="Black"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding IsAmountOutValid}" Value="False">
									<Setter Property="Foreground" Value="#A00"/>
									<Setter Property="BorderBrush" Value="#F22"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Style>
				</TextBox>
			</StackPanel>
			
			<!-- Description In-->
			<TextBlock
				Grid.Row="3"
				Grid.Column="0"
				Text="{Binding TradeDescriptionIn}"
				TextWrapping="Wrap"
				Foreground="Blue"
				Margin="8,1,8,8"
				/>
			<TextBlock
				Grid.Row="3"
				Grid.Column="1"
				Text="{Binding TradeDescriptionOut}"
				TextWrapping="Wrap"
				Foreground="Blue"
				Margin="8,1,8,8"
				/>
		</Grid>

		<!-- Errors Description -->
		<Grid
			Grid.Row="2"
			>
			<ScrollViewer
				VerticalScrollBarVisibility="Auto"
				>
				<TextBlock
					Text="{Binding ValidationResults}"
					TextWrapping="Wrap"
					Foreground="Red"
					Margin="3"
					/>
			</ScrollViewer>
		</Grid>

		<!-- Buttons -->
		<Grid
			Grid.Row="3"
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			
			<!-- Create/Modify button -->
			<Button
				Grid.Column="1"
				Name="m_btn_accept"
				Command="{Binding Accept}"
				IsEnabled="{Binding IsValid}"
				IsDefault="True"
				MinWidth="110"
				Margin="0,12,12,12"
				>
				<DockPanel>
					<Image
						DockPanel.Dock="Left"
						Source="{StaticResource check_accept}"
						MaxWidth="26"
						Margin="2"
						/>
					<TextBlock
						Text="{Binding AcceptText, FallbackValue=Accept}"
						FontSize="18"
						VerticalAlignment="Center"
						Margin="2"
						/>

				</DockPanel>
			</Button>
			
			<!-- Cancel button -->
			<Button
				Grid.Column="2"
				Command="{Binding Cancel}"
				IsCancel="True"
				MinWidth="110"
				Margin="0,12,12,12"
				>
				<DockPanel>
					<Image
						DockPanel.Dock="Left"
						Source="{StaticResource check_reject}"
						MaxWidth="26"
						Margin="2"
						/>
					<TextBlock
						Text="Cancel"
						FontSize="18"
						VerticalAlignment="Center"
						Margin="2"
						/>
				</DockPanel>
			</Button>
		</Grid>
	</Grid>
</Window>
