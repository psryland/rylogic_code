<Grid
	x:Class="CoinFlip.UI.GridCoins"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:conv="clr-namespace:Rylogic.Gui.WPF.Converters;assembly=Rylogic.Gui.WPF"
    mc:Ignorable="d" 
	d:DesignWidth="800"
	d:DesignHeight="450"
	>
	<Grid.RowDefinitions>
		<RowDefinition Height="Auto"/>
		<RowDefinition Height="*"/>
	</Grid.RowDefinitions>

	<!-- Tool bar -->
	<StackPanel
		Grid.Row="0"
		Orientation="Horizontal"
		>
		<!-- Exchange drop down -->
		<StackPanel
			Orientation="Vertical"
			Margin="3"
			>
			<TextBlock
				Text="Exchange:"
				/>
			<ComboBox
				ItemsSource="{Binding ExchangeNames}"
				VerticalAlignment="Center"
				MinWidth="60"
				/>
		</StackPanel>

		<!-- Filter coins -->
		<StackPanel
			Orientation="Vertical"
			Margin="3,6,3,3"
			>
			<CheckBox
				Name="m_cb_filter_coins"
				Content="Filter Coins"
				VerticalAlignment="Center"
				ToolTip="Exclude coins with total balances less than the given value"
				IsChecked="{Binding Filter.Enabled, Mode=TwoWay}"
				/>
			<StackPanel
				Orientation="Horizontal"
				>
				<TextBox
					MinWidth="40"
					IsEnabled="{Binding IsChecked, ElementName=m_cb_filter_coins}"
					Text="{Binding Filter.Threshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					/>
				<ComboBox
					ItemsSource="{Binding Filter.Type, Converter={conv:EnumValues}}"
					SelectedItem="{Binding Filter.Type}"
					VerticalAlignment="Center"
					MinWidth="50"
					Margin="2,0,0,0"
					/>
			</StackPanel>
		</StackPanel>
		
		<!-- Backtesting Balances -->
		<StackPanel
			Orientation="Vertical"
			Visibility="{Binding BackTesting, Converter={conv:BoolToVisible}}"
			Margin="3,6,3,3"
			>
			<TextBlock
				Text="Back Testing"
				/>
			<Button
				Content="Balances"
				BorderBrush="DarkGray"
				Command="{Binding SetBackTestingBalances}"
				/>
		</StackPanel>
		
		<!-- Reset fake cash -->
		<StackPanel
			Orientation="Vertical"
			Margin="3,6,3,3"
			>
			<TextBlock
				Text="Fake Cash"
				/>
			<Button
				Content="Reset"
				BorderBrush="DarkGray"
				Command="{Binding ResetFakeCash}"
				/>
		</StackPanel>
	</StackPanel>

	<!-- Grid of coins -->
	<DataGrid
		Grid.Row="1"
		AutoGenerateColumns="False"
		GridLinesVisibility="None"
		HeadersVisibility="Column"
		IsReadOnly="True"
		ItemsSource="{Binding Coins}"
		SelectedItem="{Binding Coins/, Mode=TwoWay}"
		x:Name="m_grid"
		>
		<DataGrid.Resources>
			<ResourceDictionary>
				<Style x:Key="LiveValueAvailableCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding LiveValueAvailable}" Value="False">
							<Setter Property="Foreground" Value="#AAA"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ResourceDictionary>
		</DataGrid.Resources>
		<DataGrid.Columns>
			<DataGridTextColumn
				Header="Coin"
				Binding="{Binding Symbol, Mode=OneWay}"
				Width="0.8*"
				/>
			<DataGridTextColumn
				Header="Balance"
				ToolTipService.ToolTip="The approximate total value of the balance of the coin (typically in USD)"
				Binding="{Binding Balance, StringFormat={}{0:C}, Mode=OneWay}"
				CellStyle="{StaticResource LiveValueAvailableCellStyle}"
				Width="1*"
				/>
			<DataGridTextColumn
				Header="Value"
				ToolTipService.ToolTip="The approximate value of the coin in the live value currency (typically USD)"
				Binding="{Binding Value, StringFormat={}{0:C}, Mode=OneWay}"
				CellStyle="{StaticResource LiveValueAvailableCellStyle}"
				Width="1*"
				/>
			<DataGridTextColumn
				Header="Available"
				ToolTipService.ToolTip="The amount of the coin available for trading"
				Binding="{Binding Available, Mode=OneWay, Converter={conv:WithoutUnits}, ConverterParameter='F8'}"
				Width="1.5*"
				/>
			<DataGridTextColumn
				Header="Total"
				ToolTipService.ToolTip="The total balance amount of the coin"
				Binding="{Binding Total, Mode=OneWay, Converter={conv:WithoutUnits}, ConverterParameter='F8'}"
				Width="1.5*"
				/>
		</DataGrid.Columns>
		<DataGrid.ContextMenu>
			<ContextMenu
				DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
				>
				<MenuItem
					Header="Add Coin..."
					Command="{Binding AddCoin}"
					/>
				<MenuItem
					Header="{Binding Current.Symbol, FallbackValue='Coin'}"
					HeaderStringFormat="Remove {0}"
					IsEnabled="{Binding Current, Converter={conv:NotNull}}"
					Command="{Binding RemoveCoin}"
					/>
				<!--<Separator/>
				<MenuItem
					Header="Live Value Conversion..."
					IsEnabled="{Binding Current, Converter={conv:NotNull}}"
					Command="{Binding EditLiveValueConversion}"
					/>-->
				<Separator />
				<MenuItem
					Header="Fake Cash..."
					Visibility="{Binding AllowTrades, Converter={conv:BoolToCollapsed}}"
					IsEnabled="{Binding Current, Converter={conv:NotNull}}"
					Command="{Binding SetFakeCash}"
					/>
			</ContextMenu>
		</DataGrid.ContextMenu>
	</DataGrid>
</Grid>