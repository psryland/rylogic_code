<Grid
	x:Class="CoinFlip.UI.CandleChart"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:settings="clr-namespace:CoinFlip.Settings;assembly=CoinFlip.Model"
	xmlns:local="clr-namespace:CoinFlip.UI"
	xmlns:conv="clr-namespace:Rylogic.Gui.WPF.Converters;assembly=Rylogic.Gui.WPF"
	xmlns:gfx="clr-namespace:Rylogic.Gui.WPF;assembly=Rylogic.View3d"
	mc:Ignorable="d" 
	d:DesignWidth="500"
	d:DesignHeight="350"
	>

	<Grid.RowDefinitions>
		<RowDefinition Height="Auto"/>
		<RowDefinition Height="*"/>
	</Grid.RowDefinitions>

	<!-- Tool bar -->
	<Grid
		Grid.Row="0"
		x:Name="m_toolbar"
		>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
		</Grid.ColumnDefinitions>
			
		<!-- Exchange -->
		<StackPanel
			Grid.Column="0"
			Orientation="Horizontal"
			>
			<TextBlock
				Text="Exchange:"
				VerticalAlignment="Center"
				Margin="2"
				/>
			<ComboBox
				ItemsSource="{Binding ChartSelector.Exchanges}"
				SelectedItem="{Binding ChartSelector.Exchange, Mode=TwoWay}"
				ToolTip="Select the exchange that lists the pair"
				VerticalAlignment="Center"
				MinWidth="80"
				Margin="2"
				/>
		</StackPanel>

		<!-- Pair -->
		<StackPanel
			Grid.Column="1"
			Orientation="Horizontal"
			>
			<TextBlock
				Text="Pair:"
				VerticalAlignment="Center"
				Margin="2"
				/>
			<ComboBox
				ItemsSource="{Binding ChartSelector.Pairs}"
				SelectedItem="{Binding ChartSelector.Pair, Mode=TwoWay}"
				ToolTip="Select the currency pair"
				VerticalAlignment="Center"
				MinWidth="80"
				Margin="2"
				/>
		</StackPanel>

		<!-- Time frame -->
		<StackPanel
			Grid.Column="2"
			Orientation="Horizontal"
			>
			<TextBlock
				Text="Time Frame:"
				VerticalAlignment="Center"
				Margin="2"
				/>
			<ComboBox
				ItemsSource="{Binding ChartSelector.TimeFrames}"
				SelectedItem="{Binding ChartSelector.TimeFrame, Mode=TwoWay}"
				ToolTip="Select the time frame"
				VerticalAlignment="Center"
				MinWidth="80"
				Margin="2"
				/>
		</StackPanel>

		<!-- Separator -->
		<Line
			Grid.Column="3"
			X1="0" Y1="3" X2="0" Y2="26"
			Stroke="#AAA"
			SnapsToDevicePixels="True"
			Margin="3"
			/>

		<!-- Cross hair -->
		<Button
			Grid.Column="4"
			Command="{Binding Chart.ToggleShowCrossHair}"
			ToolTip="Display the cross hair"
			Background="Transparent"
			BorderThickness="0"
			MaxWidth="26"
			Margin="3"
			>
			<Image Stretch="UniformToFill" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="HighQuality">
				<Image.Style>
					<Style TargetType="{x:Type Image}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding Chart.ShowCrossHair}" Value="False">
								<Setter Property="Source" Value="{StaticResource cross_hair_gray}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding Chart.ShowCrossHair}" Value="True">
								<Setter Property="Source" Value="{StaticResource cross_hair_blue}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
		</Button>

		<!-- Tape Measure -->
		<Button
			Grid.Column="5"
			Command="{Binding Chart.ToggleShowTapeMeasure}"
			ToolTip="Measure a time and price span"
			Background="Transparent"
			BorderThickness="0"
			MaxWidth="26"
			Margin="3"
			>
			<Image Stretch="UniformToFill" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="HighQuality">
				<Image.Style>
					<Style TargetType="{x:Type Image}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding Chart.ShowTapeMeasure}" Value="False">
								<Setter Property="Source" Value="{StaticResource tape_measure_gray}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding Chart.ShowTapeMeasure}" Value="True">
								<Setter Property="Source" Value="{StaticResource tape_measure_coloured}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
		</Button>

		<!-- Separator -->
		<Line
			Grid.Column="6"
			X1="0" Y1="3" X2="0" Y2="26"
			SnapsToDevicePixels="True"
			Stroke="#AAA"
			Margin="3"
			/>

		<!-- Show Orders -->
		<Button
			Grid.Column="7"
			Command="{Binding ToggleShowOpenOrders}"
			Background="Transparent"
			BorderThickness="0"
			MaxWidth="26"
			Margin="3"
			>
			<Image Stretch="UniformToFill" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="HighQuality">
				<Image.Style>
					<Style TargetType="{x:Type Image}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ShowOpenOrders}" Value="{x:Static settings:EShowItems.Disabled}">
								<Setter Property="Source" Value="{StaticResource dollar_sign_black}"/>
								<Setter Property="ToolTip" Value="Display open orders on the chart"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ShowOpenOrders}" Value="{x:Static settings:EShowItems.Selected}">
								<Setter Property="Source" Value="{StaticResource dollar_sign_green}"/>
								<Setter Property="ToolTip" Value="Showing the selected open order on the chart"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ShowOpenOrders}" Value="{x:Static settings:EShowItems.All}">
								<Setter Property="Source" Value="{StaticResource dollar_sign_blue}"/>
								<Setter Property="ToolTip" Value="Showing all open orders on the chart"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
		</Button>

		<!-- Show Completed orders -->
		<Button
			Grid.Column="8"
			Command="{Binding ToggleShowCompletedOrders}"
			Background="Transparent"
			BorderThickness="0"
			MaxWidth="26"
			Margin="3"
			>
			<Image Stretch="UniformToFill" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="HighQuality">
				<Image.Style>
					<Style TargetType="{x:Type Image}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ShowCompletedOrders}" Value="{x:Static settings:EShowItems.Disabled}">
								<Setter Property="Source" Value="{StaticResource history_black}"/>
								<Setter Property="ToolTip" Value="Display completed orders on the chart"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ShowCompletedOrders}" Value="{x:Static settings:EShowItems.Selected}">
								<Setter Property="Source" Value="{StaticResource history_green}"/>
								<Setter Property="ToolTip" Value="Showing the selected completed order on the chart"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ShowCompletedOrders}" Value="{x:Static settings:EShowItems.All}">
								<Setter Property="Source" Value="{StaticResource history_blue}"/>
								<Setter Property="ToolTip" Value="Showing all completed orders on the chart"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
		</Button>

		<!-- Separator -->
		<Line
			Grid.Column="9"
			X1="0" Y1="3" X2="0" Y2="26"
			SnapsToDevicePixels="True"
			Stroke="#AAA"
			Margin="3"
			/>

		<!-- Volume -->
		<Button
			Grid.Column="10"
			Command="{Binding ToggleVolume}"
			ToolTip="Show/Hide the trade volume indicator on the chart"
			Background="Transparent"
			BorderThickness="0"
			MaxWidth="26"
			Margin="3"
			>
			<Image Stretch="UniformToFill" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="HighQuality">
				<Image.Style>
					<Style TargetType="{x:Type Image}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ShowVolume}" Value="False">
								<Setter Property="Source" Value="{StaticResource histogram_gray}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ShowVolume}" Value="True">
								<Setter Property="Source" Value="{StaticResource histogram_coloured}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
		</Button>

		<!-- Market Depth -->
		<Button
			Grid.Column="11"
			Command="{Binding ToggleMarketDepth}"
			ToolTip="Show/Hide the market depth indicator on the chart"
			Background="Transparent"
			BorderThickness="0"
			MaxWidth="26"
			Margin="3"
			>
			<Image Stretch="UniformToFill" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="HighQuality">
				<Image.Style>
					<Style TargetType="{x:Type Image}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ShowMarketDepth}" Value="False">
								<Setter Property="Source" Value="{StaticResource market_depth_gray}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ShowMarketDepth}" Value="True">
								<Setter Property="Source" Value="{StaticResource market_depth_colour}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
		</Button>

		<!-- Time Range -->
		<StackPanel
			Grid.Column="13"
			>
			<TextBlock
				Text="{Binding VisibleTimeSpan}"
				VerticalAlignment="Center"
				Margin="3,0,3,0"
				/>
			<TextBlock
				Text="{Binding AccountPositionDesc}"
				Background="{Binding AccountPositionColour, Converter={conv:ColourToBrush}}"
				TextAlignment="Center"
				VerticalAlignment="Center"
				Margin="3,0,3,0"
				/>
		</StackPanel>

		<!-- Chart Options -->
		<Button
			Grid.Column="14"
			Command="{Binding ShowChartOptions}"
			Background="Transparent"
			BorderThickness="0"
			MaxWidth="26"
			Margin="3"
			>
			<Image Source="{StaticResource options}" Stretch="UniformToFill" StretchDirection="DownOnly" RenderOptions.BitmapScalingMode="HighQuality"/>
		</Button>
	</Grid>

	<!-- Candle Chart -->
	<gfx:ChartControl
		Grid.Row="1"
		x:Name="m_chart_candles"
		ChartBackground="White"
		Margin="4,0,4,4"
		/>
	
	<!-- Indicators -->
	<local:IndicatorLegend
		Grid.Row="1"
		x:Name="m_indicator_legend"
		HorizontalAlignment="Left"
		Expanded="False"
		Margin="4,0,0,0"
		/>

	<!-- For doodling -->
	<Canvas
		Grid.Row="1"
		>
		<!-- 
		RenderTransform="1,0,0,1,100,100"
		-->
	</Canvas>
</Grid>
	