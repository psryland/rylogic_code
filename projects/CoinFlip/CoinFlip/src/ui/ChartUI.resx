<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="m_ts.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_chk_show_positions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABQaSURBVHhe7ZsJdFRVnsYNIQlJVWWppNakUqmkstSWfV8J
        kIQlgAtbswg4ItrDIi496gi44N5iu7aCW7shiyz2qDSEVXFhBxXBdhdsFZeeObanZ5qZ/3zffe+FAu3T
        px0g6PQ95zsv5KTq3ft733+5t4oz/jH+MXpsxOjX/xeDi+3WgLUVKaYZJgd+7qX/7ic9YprXDMgP7ak9
        P7iv8dfFb/ffE9zbfCTjhtxvzRMz5nhbvH30v/vJjhjfs6WLKw8MlJq3h0j9O0Ok4s12ybglTxIudkni
        1Ix99jGuNvwd3fCTHDH+lRWLq/Z3dAOofL1D7I8FxLrQL2lPBsS2KCi+roqnCw4NOL/i7bPa2heOsOqv
        /dGPXtVzq5NDz9WvrT4wuBtAw++h94dJw4fDpfXjEdL/0EgZ8OkoaftsjLR+MVqaD48+0vblpA2dX/18
        Qu2s2kT9vX5UIza0vq6jYFf9U+E3mr6p2N8uVTqAut8Plsb3hkrz+2dJ0wdnSV8A6AcA/T8ZKe0A0Hb4
        ZzLwi3EyFBrxx6ky5d+vfn3iW3P74j1/FCES6/9dSXvxzuY9od2tUrq3TcrfaJOqfYj//RqAWgBoeLcT
        AIYDwJnS8tE50nqQEEZI26ejpR0AOr4cJ51fjJfhX5wLTZKp38yWUbunPhCcFWRonJZVI6b0zlJb8JX6
        JUU7myW4q59EdveX0tcHSPnrbVL5ZodUvwXBBbWwP8OghQDe/y6Ajs8JYKwMhgOGHSaAiTIMIMZ/c4mU
        rm39KHRvaCjud1qVz151z9YVBbfUHSje1iKBHX0luLO/FO9uk5I9RwHU7EMY7B/UnQeaEAYE0PzR2XoY
        IBfoYdBxeCzCYKwMPTxBAdAgTJah/zFFMh4vEtf9vkcab2i08d7aFHpwRO6L5Aa3VB+KbG2W4u0tEtoB
        CDtbJbx7gIJQBhdUvtEutXSBHgbMA91h8OFZ3+8CABhy+KgLhh+eJEO+nCTlqCamu7Il5V7vocI7iw03
        9MxomdtiLtpQt6fo1QaJbAMAOIAAinb2ldAuAhigwqACAKrfHCi1cEB0GDS9N6w7DxzvgoHKBcgFx7hg
        krR+OUrsD/nFMt8r5ntzxHFn7g2YSqw2o1M7ehU+V31zwSsNUvRag4S2Nkpka4uEt/eFA7QwiABCdxjQ
        BfsMFwyGC4agGnSqMGj68OxuFxCAcoEeCkyIw6IgDPx8nBSsqxXTzVlivs0j5js94rmj4DbOR5vWKRr9
        HhoY9G6u+bP/lUYAaJQgxDAo2YanDxcEGQYAEAGI8JZm3QXtqhpEXusrRb+t0UviMGmEC5qPc8HRUBgn
        AwFh6BcTVDIchmvZ/jZJvD5TTDdAAGG53SPuq7M7Ma1TByFndcU9vi31ogHQXBDe1oQ80CwR5IIgIBS+
        3Cyu+YWS+1SJcgEh1Lw1WIIokWk35YjngZA0IBk2qlxwtjRDrQdHHguBofDZWKnbMUgiq+rFMz8o1jmw
        /y9cYroOAOZlienGLEm5wf0OppWgze4kj5FzR8b7uyq/9L5cJ3kvN0gBcgABBCEtF6AUbm+SovtrJWly
        umQ9FpGyvVouYE8QgTtSbvRJwky7RLoaVS5QLvhADwUAqHtjqERWt4h3Yamk/sIjpouwb5hok/jRaZBV
        4kZZJWFCOkC4xUw3zHOLb65/vD7Fkzpi8u8va85/sUZy4QAfAOQxD7zaKAGACG+FCwCg6KUGsV+bL30m
        Z4jn8WIp0QGwJBbv6C8pN/kkboZd0m/KhQs6pf5Ap4TXNYvviXKxXpsridNcknBeBhabrhacMCb9O9JA
        pEnCZKtYrnBK2mz3Cs5Pm+bJGzHexcFLCjbXS/5L9ZLzcv1xLkAuQCgEXm0W63U+7Pbs4nmiVCuJOoTi
        7QgBOCB+ukMSZtjEdmuBJM7Ez1PsEj8WC8PTVQv7nkVTXLiCAjgJY/i3qZJwVtpXKRNsizC/OG2aJ3H4
        lpfclb+5TgpfbFAuyIED8pgLsOgAnEAXlL4xQLKXVojpmizxLCmRMJIhSyIhKADzNAfEz3BI3EWw9nlY
        2Fgu+rtPO17J+D0WPAILHp7yh4QhlsWJ7cnTU+pTSjGt3trsTsHwrAg9VQAA3S7YYuQCxP1rTcoFJUiE
        sw7dKO4nI5K1qhTtsd4d7u0vQTgkdZ63G4ChOF5/Dp1r/VPSsNTX4rFQPuneI1Ik8Zy0D8xnWp+0DXdN
        LxxUGME0eqT2q+FcGliUvwmLfgkQXqyXXEDI1XNBIUIhAAAhqHJXG7a7Y5QzgrvRG7A52tMP1aJVLNcz
        BI4FYKj3BRmHcJu4tGCfbHObeYSj2uHDv0+b3j8m75nSh/I21igHEEAhEl6enhD9qAzMBYTAUKATina0
        oi9AaYQLGAqE4V9XL64Hw5I8O1vip9klLgpG3FTrJ7hPz/f5f21kPpx/Vc6mavFvqgUEzQUMBR8SIvuC
        QlYE9gVMiIAQQm8QAITwrmM3SmU8JfpwqFS9M0zCm/uJ9zflYp7tkbgLrH/AbXrO4n9rZM7OH2IAYDI0
        IPhVKMAVBgSWRR1CGE6IsENEE6TtE5gPsFdQlQFNEtrkRrTFAz4fL63vjj1Sv3VoV8bS3Nn+p4ra6m+p
        t+C2pw+Q4vHFJvczka99m2okb6PmgvwXWRXgAoQCE2KhSohGi6x1iKUAENrRTwIMBZUPjt0yVwNCLRql
        WnSLgw5OlCmHZ0v/neMkZWXeNxkr8tfkLo/M7Fg0PAdTIIwezQkx2XcH5ne7gMLimROYD+gCDYLWJocA
        gL0BIXDLzHBgKCgI2DGqcNA3TNUAQQg1b+HnA4Nk9MfTZd6nCyTc1SrJK/ySttJ/xLW88IWCJwKDMA+W
        vp7JFe7+7vTMJwMf5WLxdIEWChoA/xYtKearUNAbJO4W9TY5hB2j2jLv7Kd2jHQCQ6G7XYZqAKLurYFS
        CTW+faZc9tWtUrqhQyxP54llSa6YluaKbYl/a8EDpVWYTo9A6GW7yNPuXVX6l1yEQnRCLNCrgtYbHN0s
        qS0zAER0J4TU6RHKIiBE6AQDAtxQ9UaHVAECQdQAQvX+gTL665ni/12dWB7Jk+RHocfyJPXx3L94FwYu
        wnx6JEfEOi/KPNv9dOjbXBUONcoJfkBQpRFJMbpNjg6HEkAgiKA6O+gHN/Q/CkE/SzTcwMOUqn3tyA0D
        pe3riWJ/qkgsC3LEstAnlgdzJflBr+TdH76U89GmdWpHbOpwe8R5e15X1rISLB5ueLFWtckqHHQIRihQ
        YTihWOUEVIcdCAnlBFYHgECCjOxB24ywIAhCMFQN1bw9SMrfHSSme7xiupfyQTliuttzJOfGonbMp8eS
        Y2zyOcmV6bPdC50LCv/oW10pgZcaEQ5slQEB0pygVQZCoBPCgBAEhLBqlNgt6hD05GiAKMfiVVjw+vFQ
        cS8Ni2W+Ryx3ZEPaNe0W73vDzlMls0dHL1vQZs44L2OM9frsxe4FBd9kdVWpTROdkP+y1iMEsWdgu0wI
        DAWGRCmkHatHg2hDkkTzBJXtJQyExpttkr+zSUw3u8V0S5aSWVfCrJR/whxOnyNzV4UrKbCi6qDaNaI8
        8upX5wfcNBkQtOpQwgSpDlU1CCEFYgCSpAaiZE+H+rCFeSK0v79YbveKeR4W3i23pM3J2on7nlZdZExo
        Vc0HRnlko5TTVS2Zj4bEv1kPCaNEojIQBK9hda6oHbFz7xCIqhaEEdrdTzIeLpLEOZmSNAcugNT1apd4
        Rwad+r17dPApJFy1+KrM4Kq6gyyPAUBQewYkSfNcJLDLnZK1pFh1jaGtyAOqQjAcAALi2SL3EWoPoXaT
        2EhBrBjsIRyLQpJwpUv6XOWWxCt1XeES2wVZA7UpnLzRq2xZmde6Pr8mY3t4VMbu4kscu8Pz3TvDy3J2
        Ve3176r/KuvuIrFe45GUOW7JXBLSts4okTwq8+NqnpuDnZ9TErD78ywu0btGWB8g2DqrfmGbdrgaAogg
        QIR20RFUP4RJi7iWRsR0mUPTpQ6xXOoU8yUuSbnQfZ4+zxM6YuruKfPaXiv+wPlq2RHbyyVi31Iutk1l
        4lhXIY6ucnGtr5BMyIctsf3xsJiv90ryvGzJWka7V3U3Snmb6QBsg/Xtb9LlLmygmnQIFPIDw0LfQ6im
        CdcgW+jtWDz2E0XbW8WxJCwJFzslfiaE9+kz3SGJ0/B+E9Km6HM+4SPWuTJ8xLW2XNxrsGDI3lUhdgBw
        Qq71leLeUClZWKwHmd9yM0oUlImSxU7R6Bb9AGCacxRAwnS7eFA2/app4iYK1QAK6BAMGTmCIRKGU2xP
        BMQ81Q45tOsFNkmCrOOcE/X5nvAR41gW3ONcUyaEQPHJKwhdlQqECwAIInwAWfoOr6T8KkcylxWLT984
        +TeiUdpcLaa5nm4APArLeqFclUmeLWrbaQ1EQIUF8oEBYVtfVAuEBCqJY0GhJJ1nhTIkcXK6JE2i0sQ1
        yNWgz/eEjxj3E8ULowHQBQ5cbQqC5gQqsK9NCtc1S/LD+eJaHhHuHLl9zsXT597BPEcDwJOgxNluFRYE
        kIuFUVoL3dTtCANEcGtfPP2+auNlu82PBWeIGQtXmmiV5PHp/+mv9ifr8z3hIyZvfniUY02pfD8EXI1w
        gEZ/crEUdTWLc0VIsjdWi3djFUAAggKQrRJgwiUOcSwPo3WuU61zvtpJag3TUTcwJIz8oJ035nXVSdoV
        qP0AYJmsiRAsI9Oe4Ty16Z6EMf7SNpNtWegwARgiBOYEBWHdUQiZG6plxEHs4NbUSxYAZAOAF9fcTVXq
        6Mt8i1cynmeCrNHOFrF/YJUoRKnM50kzQOQSCBzBD2GZJFWiREvtXVkplvNtxyw+6dxUMbelNutTPXnD
        cU/RPPtxAI5xAiA4o5KjB0+cyTFzQ5WCkP0SGqGtSJZbKgHD2EUiQaI/UCAAoAAAuIcw9hE+PTR45pi/
        sV4y7whqT1xfvAn2t4xKW47pnfwu0FptTXYuCXz2HQAQneDENXMtwgBS4aBXB4oAPITAkIATVEhg8XRB
        vgJRp0l3BK90Ag9cKUIoWFIjqdNcauGarGL+WeqnmS2ZWfoUT/7IuzE02vGclguiIbh1CARA2fW8oEGo
        kCxA0ABoMLxwACGo80UCMA5W9J6hOyxwLUAzVfhCg2Rdj6ePJ64WPxHWH5vyJ1unrRHTOqUnQ7GuX+bd
        6lh9LAQDgBIAMDGyRDoYFpAWCrC/4QKIFSIagjpnVBC0c0ZDhRvqJHg3EihKHi2fdC4/Skv5PPuc7P6c
        jzatUzvirLf4FthfKAYALJAQcDVECHQAy6OqELjSCS7kAtUwdbuByZHhoJXKPACg+OkTnaBCYn2tRO5v
        kOSpmZI4IU36jEsR0zmpq1PrUr2YR4/u/uLc8wrm2p4JHel2ggEAbmA+YFLMgGxrK1VOcAKAASETQLLw
        swFCc4MmuiEPDsnD7rHovipJvdCNJ54qSWemvOTqdJ2Je3Php3zvb9ww+saxyaPSq1Lv8r1i/234aEjo
        LiAEOoHNkiqRWLATi9cgaFIVYhPzAsslw4EQ4Ixny8Vza1hSzrV9Ye5M/pWpOZUfjPI4/JQunDeLFpON
        IT4FQ3EZEzOHOOb7Xsj4TeER52qAwOINEFqzhHzAjpFSiRFuwAbKvR4LBRRVJTZViPc5wLqn8L9dl/o2
        IsFN4CkT3v+ULtoY0YvuXigUD/E7ORS/0BytpDPyz8hMOjflfPtNuUudK0u6EyMTpSqTAEEAygXrAYHu
        WFUsGY8GxPpLv1hm2W7wTvAG8F68X48vnJYzFspDxxSI39u1Qy7IDbEGZ0NMStHy5CxnT6ABoLKfLxPT
        bCQzdZDhkqR/wRb2ErckzYJmuiR1ZpbgdbwfQRsy4Ee7z5Ax1xMGylg4b8gnzf/VwYWnQ1wwP58rgMJQ
        OVQDNUH8VjdLUgc0GOJX1zqzl5V09wkUM77pXz3aXoB7+OlOMc1wdStdA8BjLf63Gn4lNg0idM7BBPFB
        RAOKhnNCYPDFfEO+OW/Gm3MifMr5UDFUC7VCXOhZ0FhoMsRPaWZCl0NXQbPdSyNHE6MCgO2wDiBxhrb4
        pG45xTrNfQSv6wcRKuHyKzBBiPemqzIhuo8PJBUimCSID4oPjI7l/H8wBL6Qb8I34xsTAG/ImxdBFRA3
        HfyA8mxoHHQBxIVfAV0D3QzNh+5xLD5aGSg6wAwA8TPs0gcLToTtebVc5PyvpAGpW2PNsXfidddBfK9p
        0CRoFDQEossIpQQqhHwQQ5APiDDoEMMdhiv+7kEAfCHfhFSZgWlDWtID8UnQ/vxgkhPixDhBOmA6xIlf
        CykIPLqy61toDQAccJXmAB5jWaY4v7W0pu9NMMcvwd8/Ai2E7uNroRuhOdBl0D9DPO8bDfGeLVAlxGTJ
        sOT8CIGu5dy5hh8MwAgDIwHSCbQab5ABMRcQRh7ECfCJVEN0BnMAw2JcYmLChdZZ3n9Lv823L+Ohgj+n
        Lyr6Hy+yvulKt5gmOz7pU5X8fGxc7K/xtxQXfS90F8TFEyCdwFCaBTG8ot3AMKEb2BvkQswbfFCcK937
        gwFwGBAMNxgwSNaoCLSbURUYj3wCjE+Gih8ywNApdb17925K9MafaRmRfrm903013pWLYejwyc6AGEIU
        f+bvpkL8pGcCxKdOqMw5TLQ89mIohiCGAR8IF0+3cn6G/Tn/HzSiARwvA4gBxQBj9AYGHE6GjiEcxiif
        EBMpJ8wwIiAmVC6E7qmD6iEujlf+m7+nzVltmAy5YOYhAmbZ5Xvy/XkMZjx5zuf/tPi/NqIhRI/o3/PG
        hr4PEHPK8e7hk+MiGFqGCMyQ8Tv+DfuP48tidPY3Fm7olI7oGx+vaDCGjgcULS7oeBm/59V4nWF1Q8b9
        TtsRDeVk6O8YZ5zxv8qYxZY+8xqIAAAAAElFTkSuQmCC
</value>
  </data>
</root>