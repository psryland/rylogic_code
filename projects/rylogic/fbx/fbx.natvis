<?xml version="1.0" encoding="utf-8"?>
<!--
https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2017

Use:
	1) Add the natvis file to the project
	2) Drop a symlink to this file in:
	    C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Packages\Debugger\Visualizers
	 
The Natvis framework is not used for visualizations when:

 Mixed mode debugging a desktop application (i.e. an app that is not a Windows Store app)
  and the Managed C++ Compatibility Mode option is checked in the Debugging/General
  page of the Visual Studio Options dialog box.

 Edit and Continue (Visual C++) is enabled in the Debugging/Edit and Continue page of
  the Visual Studio Options dialog box.

 The program is built with Edit and Continue enabled
  i.e. Debug Information Format, use Program Database (/Zi)
  
 Options->Debugging->General-> "Show raw structure of objects in variables windows"
  
Diagnosing Natvis errors:
	Under Tools > Options (or Debug > Options) > Debugging > Output Window,
	set Natvis diagnostic messages (C++ only) to Error, Warning, or Verbose,
	and then select OK.
old:
  Natvis diagnostics helps you to troubleshoot issues when writing new visualizations.
  When the Visual Studio debugger encounters errors in a visualization entry, such as
  xml schema errors, or expressions that fail to parse, it simply ignores the errors
  and either displays the type in its raw form or picks another suitable visualization.
  To understand why a certain visualization entry is ignored and to see what the
  underlying errors are, you can turn on visualization diagnostics by setting the
  following registry value:
  [HKEY_CURRENT_USER\Software\Microsoft\VisualStudio\12.0_Config\Debugger]
  "EnableNatvisDiagnostics"=dword:00000001
-->
<AutoVisualizer
	xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010"
	>

	<Type Name="fbxsdk::FbxNode">
		<DisplayString>{mName.mInitialName.mData}</DisplayString>
	</Type>
	<Type Name="fbxsdk::FbxMesh">
		<DisplayString>[Mesh] {mName.mInitialName.mData}</DisplayString>
	</Type>
	<Type Name="fbxsdk::FbxVectorTemplate4&lt;*&gt;">
		<DisplayString>{mData[0],g}  {mData[1],g}  {mData[2],g}  {mData[3],g}</DisplayString>
	</Type>
	<Type Name="fbxsdk::FbxAMatrix">
		<DisplayString>{mData[0],g} &#10;{mData[1],g} &#10;{mData[2],g} &#10;{mData[3],g}</DisplayString>
	</Type>
	
</AutoVisualizer>