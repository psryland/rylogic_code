<Window
	x:Class="Rylogic.Gui.WPF.MsgBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Rylogic.Gui.WPF"
	xmlns:conv="clr-namespace:Rylogic.Gui.WPF.Converters"
    mc:Ignorable="d" 
	d:DesignWidth="960"
	d:DesignHeight="180" 
	Title="Message Box"
	WindowStartupLocation="CenterOwner"
	SizeToContent="WidthAndHeight"
	ResizeMode="CanResizeWithGrip"
	ShowInTaskbar="False"
	MinWidth="330"
	MinHeight="100"
	>
	<Window.Resources>
		<ResourceDictionary>
			<BitmapImage x:Key ="check_accept" UriSource="/Rylogic.Gui.WPF;component/res/check_accept.png"/>
			<BitmapImage x:Key ="check_reject" UriSource="/Rylogic.Gui.WPF;component/res/check_reject.png"/>
			<BitmapImage x:Key ="check_abort" UriSource="/Rylogic.Gui.WPF;component/res/check_reject_gray.png"/>
			<BitmapImage x:Key ="check_no" UriSource="/Rylogic.Gui.WPF;component/res/check_no.png"/>
			<BitmapImage x:Key ="rotate" UriSource="/Rylogic.Gui.WPF;component/res/green_rotate.png"/>
			<BitmapImage x:Key ="green_right" UriSource="/Rylogic.Gui.WPF;component/res/green_right.png"/>
			<BitmapImage x:Key ="exchange" UriSource="/Rylogic.Gui.WPF;component/res/exchange.png"/>
			<BitmapImage x:Key ="recycle" UriSource="/Rylogic.Gui.WPF;component/res/recycle bin2 clean.png"/>
			<BitmapImage x:Key ="bottom" UriSource="/Rylogic.Gui.WPF;component/res/bottom.png"/>
		</ResourceDictionary>
	</Window.Resources>
	<DockPanel
		LastChildFill="True"
		>

		<!-- Buttons -->
		<Grid
			DockPanel.Dock="Bottom"
			Background="{x:Static SystemColors.ControlBrush}"
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			
			<CheckBox
				Grid.Column="0"
				Content="Always"
				Visibility="{Binding ShowAlwaysCheckbox, Converter={conv:BoolToVisible}}"
				IsChecked="{Binding Always, Mode=TwoWay}"
				VerticalAlignment="Center"
				Margin="8,8,4,8"
				/>
			<StackPanel
				Grid.Column="2"
				Orientation="Horizontal"
				Margin="8"
				x:Name="m_btn_panel"
				>
				<StackPanel.Resources>
					<Style TargetType="Button">
						<Setter Property="MinWidth" Value="80"/>
						<Setter Property="MinHeight" Value="22"/>
						<Setter Property="MaxHeight" Value="30"/>
						<Setter Property="Margin" Value="4,0,4,0"/>
					</Style>
					<Style TargetType="Image">
						<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
						<Setter Property="VerticalAlignment" Value="Center"/>
						<Setter Property="Margin" Value="2"/>
					</Style>
					<Style TargetType="TextBlock">
						<Setter Property="VerticalAlignment" Value="Center"/>
						<Setter Property="Margin" Value="4,0,4,0"/>
					</Style>
				</StackPanel.Resources>
				
				<Button
					Name="m_btn_ok"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.OK}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.OK}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.OK}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource check_accept}"
								/>
							<TextBlock
								Text="{Binding OkText, FallbackValue='OK'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_yes"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.Yes}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Yes}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Yes}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource check_accept}"
								/>
							<TextBlock
								Text="{Binding YesText, FallbackValue='Yes'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_reload"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.Reload}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Reload}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Reload}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource rotate}"
								/>
							<TextBlock
								Text="{Binding ReloadText, FallbackValue='Reload'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_overwrite"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.Overwrite}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Overwrite}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Overwrite}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource exchange}"
								/>
							<TextBlock
								Text="{Binding OverwriteText, FallbackValue='Overwrite'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_discard"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.Discard}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Discard}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Discard}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource recycle}"
								/>
							<TextBlock
								Text="{Binding DiscardText, FallbackValue='Discard'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_abort"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.Abort}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Abort}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Abort}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource check_abort}"
								/>
							<TextBlock
								Text="{Binding AbortText, FallbackValue='Abort'}"
								/>
						</StackPanel>
					</Button.Content>

				</Button>
				<Button
					Name="m_btn_retry"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.Retry}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Retry}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Retry}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource rotate}"
								/>
							<TextBlock
								Text="{Binding RetryText, FallbackValue='Retry'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_ignore"
					Command="{Binding Accept}"
					CommandParameter="{x:Static local:MsgBox+EResult.Ignore}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Ignore}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Ignore}}"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource green_right}"
								/>
							<TextBlock
								Text="{Binding IgnoreText, FallbackValue='Ignore'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_no"
					Command="{Binding Cancel}"
					CommandParameter="{x:Static local:MsgBox+EResult.No}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.No}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.No}}"
					IsCancel="True"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource check_no}"
								/>
							<TextBlock
								Text="{Binding NoText, FallbackValue='No'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
				<Button
					Name="m_btn_cancel"
					Command="{Binding Cancel}"
					CommandParameter="{x:Static local:MsgBox+EResult.Cancel}"
					Visibility="{Binding Buttons, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Cancel}}"
					IsDefault="{Binding DefaultButton, Converter={conv:HasFlag}, ConverterParameter={x:Static local:MsgBox+EButtons.Cancel}}"
					IsCancel="True"
					>
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<Image
								Source="{StaticResource check_reject}"
								/>
							<TextBlock
								Text="{Binding CancelText, FallbackValue='Cancel'}"
								/>
						</StackPanel>
					</Button.Content>
				</Button>
			</StackPanel>
		</Grid>

		<!-- Body -->
		<Grid
			Background="{x:Static SystemColors.WindowBrush}"
			Margin="12"
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<!-- Optional icon image -->
			<Image
				Grid.Column="0"
				MaxWidth="96"
				MaxHeight="96"
				Stretch="Uniform"
				StretchDirection="DownOnly"
				Margin="8"
				VerticalAlignment="Top"
				Source="{Binding Image}"
				Visibility="{Binding Image, Converter={conv:NullToCollapsed}}"
				/>
			
			<!-- Prompt message -->
			<Grid
				Grid.Column="1"
				MinWidth="50"
				MinHeight="50"
				x:Name="m_content"
				>
				<TextBox
					BorderThickness="0"
					AcceptsReturn="True"
					VerticalAlignment="Top"
					Height="Auto"
					TextWrapping="Wrap"
					IsReadOnly="True"
					Text="{Binding Message}"
					/>
			</Grid>
		</Grid>
	</DockPanel>
</Window>
