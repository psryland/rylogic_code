<#@template language="C#"#>
<#@output extension="htm"#>
<!DOCTYPE HTML>
<html xmlns="http://www.w3.org/1999/xhtml">
	<#@include file="head.t4html"#>
	<body id="main_help">
		<#@include file="title_panel.t4html"#>
		<#@include file="index_panel.t4html"#>
		<div id="content_panel">
			<div class="title">Pattern Editor</div>
			<div class="content">
				Pattern matching is at the core of the highlighting, filtering, and transformation features
				in RyLogViewer. The Pattern Editor shown in the image below appears under the
				<a href="options_dialog.htm#highlighting">Highlighting Tab</a>,
				<a href="options_dialog.htm#filtering">Filtering Tab</a>, and 
				<a href="options_dialog.htm#actions">Actions Tab</a> of the
				<a href="options_dialog.htm">Options Dialog</a>. A slight variation of the pattern editor
				also appears under the <a href="options_dialog.htm#transforms">Transform Tab</a>.
			</div>
			<div>
				<img class="centred" src="pattern_editor.png" alt="pattern editor" usemap="#pattern_editor_map" />
				<map id="pattern_editor_map" name="pattern_editor_map">
					<!--					<area shape="rect" coords="9,50,29,71" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="33,77,53,96" target="_parent" href="#match_field" alt="" title="" />
					<area shape="rect" coords="79,101,99,121" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="169,99,189,119" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="11,115,31,135" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="316,114,336,134" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="382,115,402,135" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="422,46,442,66" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="491,46,511,66" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="31,257,51,277" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="78,257,98,277" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="274,256,294,276" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="473,255,493,275" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="14,437,34,457" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="417,437,437,457" target="_parent" href="#pattern_regex" alt="" title="" />
					<area shape="rect" coords="467,437,487,457" target="_parent" href="#pattern_regex" alt="" title="" />-->
				</map>
			</div>
			<div class="content">
				Select the numbered boxes in the image above to jump to the relevant description for each UI component.
			</div>
			<ol>
				<li>
					<a id="pattern_type" />
					<span class="tag_label">Pattern Type</span>
					<div class="content">
						Use these radio buttons to select the type of pattern you plan to create. The 
						versatility, but also complexity, of the patterns that can be created increases 
						from left to right, with Substring being the simplest and Regular Expression being 
						the most complex.
					</div>
					<ul>
						<li class="child_list_elem">
							<a id="pattern_substring" />
							<span class="tag_label">Substring</span>
							<div class="content">
								This is the simplest pattern of all. The pattern matching algorithm 
								looks for any occurrence of the sub string in each line of the log file text.
								Those that contain at least one instance of the sub string are considered a match.
							</div>
						</li>
						<li class="child_list_elem">
							<a id="pattern_wildcard" />
							<span class="tag_label">Wildcard</span>
							<div class="content">
								Wildcard patterns work in a similar way to Substring patterns. However, in a wildcard
								pattern the <b>*</b> and <b>?</b> characters have special meaning:<br />
								<div class="code">
									<b>*</b> = <i>"match any number of characters"</i><br />
									<b>?</b> = <i>"match any single character"</i>.<br />
								</div>
								So, as shown in the following image, the pattern <b>b*e?g</b> matches both 
								<b>abcdefgh</b> and <b>1b2345e6g7</b> as follows:
								<img class="centred" src="pattern_wildcard.png" alt="wildcard_pattern" />
							</div>
						</li>
						<li class="child_list_elem">
							<a id="pattern_regex" />
							<span class="tag_label">Regular Expression</span>
							<div class="content">
								Regular expressions are the most versatile, but also the most complex form of pattern.

							</div>
						</li>
					</ul>
				</li>
				<li>
					<a id="pattern_field" />
					<span class="tag_label">Pattern Field</span>
					<div class="content">
						This text box is where the pattern is entered. A green background will display when the pattern is 
						syntactically valid, and a red background displays if the pattern contains an error. (Typically only 
						regular expressions will contain errors).
					</div>
				</li>
				<li>
					<a id="ignore_case"/>
					<span class="tag_label">Ignore Case</span>
					<div class="content">
						
					</div>
				</li>
				<li>
					<a id="invert_match" />
					<span class="tag_label">Invert Match</span>
					<div class="content">
					</div>
				</li>
			</ol>
		</div>
	</body>
</html>
