<!DOCTYPE HTML>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
	<title>RyLogViewer Help</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel='stylesheet' type='text/css' href='help.css' />
	<base target="_parent" />
	<!---->
	<meta http-equiv="refresh" content="3"/>
	<script>
		function HighlightListItem(item_id)
		{
			if (item_id == null)
			{
				if (window.location.hash == null) return;
				item_id = window.location.hash.substr(1);
			}

			var elems = document.getElementsByTagName('li');
			for (var i = 0; i != elems.length; ++i)
			{
				if (elems[i].id == item_id)
					elems[i].className = 'child_list_elem_hl';
				else
					elems[i].className = 'child_list_elem';
			}
		}
	</script>
</head>

	<body id="main_help">
		<div id="title_panel">
	<img src="book.png" alt="Logo"/>
	<span>RyLogViewer Help</span>
</div>
		<div id="index_panel">
	<a href="welcome.htm" class="menu1">Welcome</a><br />
	<a href="overview.htm" class="menu1">Overview / Features</a><br />
	<a href="installation.htm" class="menu1">Installation</a><br />

	<a href="main_window.htm" class="menu1">Main Window</a><br />
	<a href="main_window.htm#tool_bar" class="menu2">Tool Bar</a><br />
	<a href="main_window.htm#file_scroll" class="menu2">File Scroll Indicator</a><br />
	<a href="main_window.htm#encoding" class="menu2">Character Encoding</a><br />
	<a href="main_window.htm#line_ending" class="menu2">Line Endings</a><br />
	<a href="main_window.htm#search" class="menu2">Find Dialog</a><br />
	<a href="main_window.htm#bookmark" class="menu2">Bookmarks</a><br />

	<a href="data_sources.htm" class="menu1">Log Data Sources</a><br />
	<a href="data_sources.htm#single_file" class="menu2">Simple Log File</a><br />
	<a href="data_sources.htm#program_output" class="menu2">Program Output</a><br />
	<a href="data_sources.htm#serial_port" class="menu2">Serial Port</a><br />
	<a href="data_sources.htm#tcpip" class="menu2">TCP/IP and UDP</a><br />
	<a href="data_sources.htm#named_pipe" class="menu2">Named Pipes</a><br />

	<a href="aggregate_files.htm" class="menu2">Aggregate Files</a><br />
	<a href="android_logcat.htm" class="menu2">Android Logcat</a><br />

	<a href="options_general.htm" class="menu1">Options Dialog</a><br />
	<a href="options_general.htm" class="menu2">General</a><br />
	<a href="options_appearance.htm" class="menu2">Appearance</a><br />
	<a href="options_dialog.htm#highlighting" class="menu2">Highlighing</a><br />
	<a href="options_dialog.htm#filtering" class="menu2">Filtering</a><br />
	<a href="options_dialog.htm#transforms" class="menu2">Transforms</a><br />
	<a href="options_dialog.htm#actions" class="menu2">Click Actions</a><br />

	<a href="pattern_editor.htm" class="menu1">Pattern Editor</a><br />

	<a href="transform.htm" class="menu1">Transform Editor</a><br />
	<a href="transform.htm#operations" class="menu2">Operations</a><br />
	<a href="transform.htm#code_lookup" class="menu2">Code Lookup</a><br />
	<a href="transform.htm#swizzle" class="menu2">Swizzle</a><br />

	<a href="pattern_list.htm" class="menu1">Pattern List</a><br />

	<a href="pattern_sets.htm" class="menu1">Pattern Sets</a><br />

	<a href="support.htm" class="menu1">Support</a><br />
	<a href="support.htm#updates" class="menu2">Version Updates</a><br />
	<a href="licence.htm" class="menu2">Licence</a><br />
</div>

		<div id="content_panel">
			<div class="title">Pattern Editor</div>
			<div class="content">
				Pattern matching is at the core of the highlighting, filtering, and transformation features
				in RyLogViewer. The Pattern Editor shown in the image below appears on the
				<a href="options_dialog.htm#highlighting">Highlighting Tab</a>,
				<a href="options_dialog.htm#filtering">Filtering Tab</a>, and 
				<a href="options_dialog.htm#actions">Actions Tab</a> of the
				<a href="options_dialog.htm">Options Dialog</a>.
				A slight variation of the pattern editor also appears on the
				<a href="options_dialog.htm#transforms">Transform Tab</a>.
			</div>
			<div>
				<img class="centred" src="pattern_editor.png" alt="pattern editor" usemap="#pattern_editor_map" />
				<map id="pattern_editor_map" name="pattern_editor_map">
					<area shape="rect" coords="71,11,91,31" href="#pattern_type" alt="" title="" />
					<area shape="rect" coords="29,38,49,58" href="#pattern_field" alt="" title="" />
					<area shape="rect" coords="75,62,95,82" href="#ignore_case" alt="" title="" />
					<area shape="rect" coords="165,61,185,81" href="#invert_match" alt="" title="" />
					<area shape="rect" coords="7,77,27,97" href="#test_area" alt="" title="" />
					<area shape="rect" coords="312,76,332,96" href="#capture_groups" alt="" title="" />
					<area shape="rect" coords="378,76,398,96" href="#capture_groups" alt="" title="" />
					<area shape="rect" coords="418,7,438,27" href="#regex_quick_ref" alt="" title="" />
					<area shape="rect" coords="487,7,507,27" href="#add_or_save" alt="" title="" />
				</map>
			</div>
			<div class="content">
				Select the numbered boxes in the image above to jump to the relevant description for each UI component.
			</div>
			<ol>
				<li>
					<a id="pattern_type" />
					<span class="tag_label">Pattern Type</span>
					<div class="content">
						Use these radio buttons to select the type of pattern you plan to create. The 
						versatility, but also complexity, of the patterns that can be created increases 
						from left to right, with Substring being the simplest and Regular Expression being 
						the most complex.
					</div>
					<ul>
						<li class="child_list_elem">
							<a id="pattern_substring" />
							<span class="tag_label">Substring</span>
							<div class="content">
								This is the simplest pattern of all. The pattern matching algorithm 
								looks for any occurrence of the sub string in each line of the log file text.
								Those that contain at least one instance of the sub string are considered a match.
							</div>
						</li>
						<li class="child_list_elem">
							<a id="pattern_wildcard" />
							<span class="tag_label">Wildcard</span>
							<div class="content">
								Wildcard patterns work in a similar way to Substring patterns. However, in a wildcard
								pattern the <b>*</b> and <b>?</b> characters have special meaning:<br />
								<div class="links">
									<b>*</b> = <i>"match any number of characters"</i><br />
									<b>?</b> = <i>"match any single character"</i>.<br />
								</div>
								So, as shown in the following image, the pattern <b>b*e?g</b> matches both 
								<b>abcdefgh</b> and <b>1b2345e6g7</b> as follows:
								<img class="centred" src="pattern_wildcard.png" alt="wildcard_pattern" />
							</div>
						</li>
						<li class="child_list_elem">
							<a id="pattern_regex" />
							<span class="tag_label">Regular Expression</span>
							<div class="content">
								Regular expressions are the most versatile, but also the most complex form of pattern.
								A full description of regular expression syntax is beyond the scope of this help document.
								However, essentially, a regular expression is a sequence of symbols that encode a small program.
								When executed, the regular expression identifies specific patterns in a body of text. For those
								not familiar with the syntax, reading and/or creating a regular expression can be a difficult task.
								To help with this, the pattern editor contains a <a href="#test_area">pattern testing area</a> that
								aids in visualising how the pattern will behave for given lines of text.
							</div>
							<div class="content">
								The secret to understanding a regular expression is being able to recognise and recall the meaning of 
								specific symbol sequences. To help with this, RyLogViewer also includes a quick reference guide that can
								be accessed via the <a href="#regex_quick_ref">Quick Reference Help</a> button [8]. When clicked, a small
								window appears containing a concise summary of the common regular expression sequences, along with their
								meanings and examples.
							</div>
							<div class="content">
								RyLogViewer is based on the .NET Framework 4.0 regular expression engine. To find out more visit these links:
								<div class="links">
									<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia - Regular Expression</a><br />
									<a href="http://msdn.microsoft.com/en-us/library/az24scfc.aspx">MSDN Regular Expression - Quick Reference</a><br />
								</div>
							</div>
						</li>
					</ul>
				</li>
				<li>
					<a id="pattern_field" />
					<span class="tag_label">Pattern Field</span>
					<div class="content">
						This text field is where the pattern is entered. A green background will display when the pattern is 
						syntactically valid, and a red background displays if the pattern contains an error. (Typically, only 
						regular expressions will contain errors). How the pattern is interpreted depends on the pattern type
						set immediately above.
					</div>
				</li>
				<li>
					<a id="ignore_case" />
					<span class="tag_label">Ignore Case</span>
					<div class="content">
						Check this option to ignore differences in character case when matching the pattern. This option works
						for all pattern types including regular expressions.
					</div>
				</li>
				<li>
					<a id="invert_match" />
					<span class="tag_label">Invert Match</span>
					<div class="content">
						Check this option to invert the final match result. Sometimes it is easier to create a pattern for a
						specific pattern and then highlight/filter/etc everything that isn't a match. This option works for
						all pattern types including regular expressions.
					</div>
				</li>
				<li>
					<a id="test_area" />
					<span class="tag_label">Pattern Testing</span>
					<div class="content">
						This text field is an area used for testing a pattern against arbitrary text. The pattern is applied
						to each line in the test area and highlighting is used to show which parts of the text match the pattern
						and the capture groups within the pattern.
					</div>
				</li>
				<li>
					<a id="capture_groups" />
					<span class="tag_label">Capture Groups</span>
					<div class="content">
						This table lists the capture groups identified in the pattern, and shows their values when applied to
						the line in the test area containing the cursor. The <i>tag</i> column lists the names of the capture
						groups; either their ordinal number or given label.
					</div>
					<div class="content">
						Capture groups are of limited use for highlighting, filtering, and click action patterns, however, they
						are very useful for text transforms where they are referenced in the <i>Replace</i> template. See the 
						documentation for <a href="transform.htm">text transforms</a> for more details.
					</div>
				</li>
				<li>
					<a id="regex_quick_ref" />
					<span class="tag_label">Regex Quick Reference</span>
					<div class="content">
						When clicked, this button opens a window containing a quick reference guide for common regular expression
						character sequences. It's purpose is as a 'cheat-sheet' when creating regular expressions.
					</div>
				</li>
				<li>
					<a id="add_or_save" />
					<span class="tag_label">Add/Save Button</span>
					<div class="content">
						This button is used to add a new pattern to the <a href="pattern_list.htm">pattern list</a>, or to commit
						any changes to a pattern that has been selected for editing. When the button shows the '+' icon, clicking
						it will add a new pattern. When it shows the 'disc' icon, clicking it will save any modifications made to
						the pattern that was previously selected for editing.
					</div>
				</li>
			</ol>
		</div>
	</body>
</html>
