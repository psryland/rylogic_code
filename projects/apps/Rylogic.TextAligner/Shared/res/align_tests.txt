//
// A file for testing Text Alignments
//

enum Values
{
	One = 0x1001,
	Two = 0x1002,
	Three = 0x104,
	Four = 0x1008,
	Five = 0x1010,
	Six = 0x1020,
	Seven = 0x1040,
}

static void Main(string[] args)
{
	var variable1 = "My Variable";
	var parameter2 = 1234;
	var value = 6.28f;
}

apple = red, 32;
banana = yellow, 512;
carrot = orange, 256;
cucumber = green, 16;
pea = green, 8;

struct Type
{
	int m_member1;
	float m_member2;
	unsigned long m_member3; // comment
	short member4_; /* comment */
};

aaaaaaaaa>= b
a      <= b
aaa > b
aaaaa < b
aa != b
a== b

	// Comment
	// Comment
		// Comment
   // Comment
		   // Comment

	  m_one
		  m_two
      m_three
	m_four

// 	boris
//		harris
//  yaris
// 	  feris
			
{
	An     example		of	   unaligning     
	selected   text  containing  "C-style   mult-
	line   \"  strings  \"" and    indentation!
}


enum AlignWithGaps
{
	// This line is ignored
	One = 1,
	TwoTwo = 22,

	  // This line is also ignored
	Three = 3,
	Fours = 44444,

	// And this one, even with a '=' in it
	Fives = 55,

	Six = 6,
}

// Multiple patterns - prioritisation

int m_member == value; // comment
float member_ != value_too; // comment
byte _member < val1; // comment