<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>The Nana Programmer's Guide</title>
</head>
<body>
    <table style="font-family:Trebuchet MS;font-size:10pt; width: 100%; position: absolute; left: 0px; border-top-style: none; border-right-style: none; border-left-style: none; top: 0px; border-bottom-style: none;">
        <tr>
            <td style="height: 70px; background-color: #ffcc66; text-align: right">
                <span style="font-size: 16pt"><strong>Nana - a C++ framework project &nbsp;<br />
                </strong></span>
                <br />
                <strong>The Programmer's Guide&nbsp; </strong></td>
        </tr>
        <tr>
            <td style="height: 21px">
            </td>
        </tr>
        <tr>
            <td style="height: 21px">
                <strong><span style="font-size: 16pt">nana::gui::appearance</span></strong><br />
                <br />
                <strong>
                Description<br />
                </strong>
                <br />
                This is a structure type defined to specify the appearance of a form. Its definition
                is.<br />
                <br />
                <table style="border-right: 1px outset; border-top: 1px outset; border-left: 1px outset;
                    width: 100%; border-bottom: 1px outset">
                    <tr>
                        <td style="border-right: 1px inset; padding-right: 0px; border-top: 1px inset; padding-left: 0px;
                            padding-bottom: 0px; margin: 0px; border-left: 1px inset; width: 400px; padding-top: 0px;
                            border-bottom: 1px inset; height: 20px">
                            <span style="font-family: Courier New"><strong>struct</strong> appearance<br />
                                {<br />
                                &nbsp; &nbsp; <strong>struct</strong> decoration_desc<br />
                                &nbsp; &nbsp; {<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> empty;<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> minimize;<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> maximize;<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> sizable;<br />
                                <br />
                                &nbsp; &nbsp; &nbsp; &nbsp; decoration_desc();<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; decoration_desc(<strong>bool</strong> minimize,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                <strong>bool</strong> maximize,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                <strong>bool</strong> sizable);<br />
                                &nbsp; &nbsp; }decoration;<br />
                                <br />
                                &nbsp; &nbsp; <strong>bool</strong> taskbar;<br />
                                &nbsp; &nbsp; <strong>bool</strong> floating;<br />
                                <br />
                                &nbsp; &nbsp; appearance();<br />
                                &nbsp; &nbsp; appearance(<strong>bool</strong> no_decoration,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong>
                                taskbar,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> floating);<br />
                                &nbsp; &nbsp; appearance(<strong>bool</strong> min,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> max,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> size,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong> show_taskbar,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>bool</strong>
                                floating);<br />
                                };</span></td>
                    </tr>
                </table>
                <br />
                If a form would to be defined without min/max button and sizable border, then<br />
                <br />
                <span style="font-family: Courier New">&nbsp; &nbsp; nana::gui::form form(x, y, width,
                    height, nana::gui::appearance(<strong>false</strong>, <strong>false</strong>, <strong>
                        false</strong>, <strong>true</strong>, <strong>false</strong>));<br />
                </span>
                <br />
                This piece of code may be confused because of the 5th parameter of constructor from
                nana::gui::form. So the library provides a helper class for making it easy.<br />
                <br />
                <table style="border-right: 1px outset; border-top: 1px outset; border-left: 1px outset;
                    width: 100%; border-bottom: 1px outset">
                    <tr>
                        <td style="border-right: 1px inset; padding-right: 0px; border-top: 1px inset; padding-left: 0px;
                            padding-bottom: 0px; margin: 0px; border-left: 1px inset; width: 400px; padding-top: 0px;
                            border-bottom: 1px inset; height: 20px">
                            <span style="font-family: Courier New"><strong>struct</strong> appear<br />
                                {<br />
                                &nbsp; &nbsp; <strong>struct</strong> minimize{};<br />
                                &nbsp; &nbsp; <strong>struct</strong> maximize{};<br />
                                &nbsp; &nbsp; <strong>struct</strong> sizable{};<br />
                                &nbsp; &nbsp; <strong>struct</strong> taskbar{};<br />
                                &nbsp; &nbsp; <strong>struct</strong> floating{};<br />
                                <br />
                                &nbsp; &nbsp; <strong>template</strong>&lt;<strong>typename</strong> Param0 = null_type,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <strong>typename</strong> Param1 = null_type,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <strong>typename</strong> Param2 = null_type,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <strong>typename</strong> Param3 = null_type,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <strong>typename</strong> Param4 = null_type&gt;<typename
                                    param0="null_type," param1="null_type" typename=""></typename><br />
                                <typename param0="null_type," param1="null_type," param2="null_type," param3="null_type,"
                                    param4="null_type," param5="null_type" typename="">
</typename>
                                &nbsp; &nbsp; <strong>struct</strong> decorate<br />
                                &nbsp; &nbsp; {<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; <strong>operator</strong> appearance() <strong>const</strong>;<br />
                                &nbsp; &nbsp; };<br />
                                <br />
                                &nbsp; &nbsp; <strong>template</strong>&lt;<strong>typename</strong> Param0 = null_type,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <strong>typename</strong> Param1 = null_type&gt;<typename
                                    param0="null_type," param1="null_type" typename=""></typename><br />
                                &nbsp; &nbsp; <strong>struct</strong> bald<br />
                                &nbsp; &nbsp; {<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; <strong>operator</strong> appearance() <strong>const</strong>;<br />
                                &nbsp; &nbsp; };<br />
                                <br />
                                &nbsp; &nbsp; <strong>template</strong>&lt;<strong>bool</strong> HasDecoration,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <strong>typename</strong> Param0 = null_type,<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <strong>typename</strong> Param1 = null_type&gt;<bool
                                    hasdecoration param1="null_type," param2="null_type" typename=""></bool><br />
                                &nbsp; &nbsp; <strong>struct</strong> optional<br />
                                &nbsp; &nbsp; {<br />
                                &nbsp; &nbsp; &nbsp; &nbsp; <strong>operator</strong> appearance() <strong>const</strong>;<br />
                                &nbsp; &nbsp; };<br />
                                };</span></td>
                    </tr>
                </table>
                <br />
                nana:gui::appear::decorate is used for creating an appearance of a window decoration. the
                window decoration in Windows is called non-client area, such as title bar.<br />
                <br />
                So, we can create a form without min/max button and sizable border like this.<br />
                <br />
                <span style="font-family: Courier New">&nbsp; &nbsp; using nana::gui::appear;<br />
                    &nbsp; &nbsp; nana::gui::form form(x, y, width, height, appear::decorate&lt;appear::taskbar&gt;());<br />
                </span>
                <br />
                <img alt="Window Decoration Appearance" src="./images/appearance-01.png" /><br />
                <br />
                If a window needs a minimize button, it should be
                <br />
                <br />
                &nbsp;<span style="font-family: Courier New"> &nbsp; appear::decorate&lt;appear::minimize,
                    appear::taskbar&gt;()</span><br />
                <br />
                The nana::gui::appear::bald is used for creating a window without decoration.&nbsp;<br />
                The nana::gui::appear::optional is used for creating a window with decoration depending
                on the first non-type template parameter.<br />
                <br />
                The parameter of class template decorate can be minimize, maximize, sizable, taskbar,
                floating.<br />
                The parameter of class template bald can be taskbar, floating.<br />
                The parameter of class template optional can be true, false, taskbar, floating.<br />
                <br />
                <br />
                <strong>Model
                of<br />
                </strong>
                <br />
                &nbsp;None<br />
                <br />
                <strong>Public base classes<br />
                </strong>
                <br />
                &nbsp;None<br />
                <br />
                <strong>Members</strong><br />
                <br />
                <br />
                <strong>File</strong><br />
                <br />
                nana/gui/basis.hpp<br />
                <br />
                <strong>Notes<br />
                </strong>
                <br />
                None.<br />
                <br />
                <strong>See also</strong><br />
                <br />
                &nbsp;<a href="./form.htm">nana::gui::form</a><br />
                <br />
                <hr />
                Move to <a href="../index.htm">The Nana Programmer's Guide Main Page</a></td>
        </tr>
        <tr>
            <td style="height: 21px">
            </td>
        </tr>
    </table>

    
    

</body>
</html>
