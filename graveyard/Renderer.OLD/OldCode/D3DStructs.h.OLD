#ifndef D3DSTRUCTS_H
#define D3DSTRUCTS_H

#include "PR/Common/StdVector.h"
#include "PR/Common/PRTypes.h"
#include "PR/Renderer/D3DHeaders.h"

namespace pr
{
	namespace rdr
	{
		// Structure for holding information about a Direct3D device,
		// including a list of modes compatible with this device
		struct D3DDeviceInfo
		{
			// Device data
			D3DCAPS9		m_caps;				// Capabilities of this device
			uint			m_behavior;			// Hardware / Software / Mixed vertex processing

			// Modes for this device
			std::vector<D3DDISPLAYMODE>	m_modes;

			// Current state
			D3DDISPLAYMODE*	m_current_mode;
			bool			m_windowed;
		};

		// Structure for holding information about an adapter,
		// including a list of devices available on this adapter
		struct D3DAdapterInfo
		{
			// Adapter data
			D3DADAPTER_IDENTIFIER9	m_adapter_identifier;
			D3DDISPLAYMODE			m_desktop_display_mode;      // Desktop display mode for this adapter

			// Devices for this adapter
			std::vector<D3DDeviceInfo>	m_device;

			// The device currently being used
			uint m_current_device;
		};
	}//namespace rdr
}//namespace pr

#endif//D3DSTRUCTS_H
